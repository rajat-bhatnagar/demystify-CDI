package bl.producers;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.logging.Logger;

import javax.enterprise.inject.Produces;
import javax.inject.Inject;
import bl.qualifiers.CislRoot;
import bl.qualifiers.CurrentTime;

public class FileProducer {
	/*
	 * Injecting the logger containing the className from LoggingProducer
	 * Note that class name is injected dynamically using the Injection Point API
	 */
	@Inject
	private Logger logger;
	
	/*
	 * Path will be injected here from PathProducer
	 */
	@Inject @CislRoot
	private Path path;
	
	@Inject @CurrentTime
	private long currentTimeMillis;
	
	@Produces
	public Path produceFile() throws IOException{
		/*
		 * path will be injected here from PathProducer
		 */
		logger.info("The path (generated by PathProducer) will be injected here - # Path : "+path);
		if(Files.notExists(path)){
			Files.createDirectory(path);
			logger.info(" Directory Created :: " +path);
		}
		/*
		 * currentTimeMillis will be injected by NumberPrefixProducer and has a seperate qualifier
		 */
		Path file = path.resolve("myFile_" + currentTimeMillis + ".txt");
		logger.info("FileName : "+file);
		if(Files.notExists(file)){
			Files.createFile(file);
		}
		logger.info(" File Created :: " +file);
		return file;
	}
}
